May 13th 2022:

Class added.

TimeWindow is a class used to represent a period of time on some weekday. It is also to be used
as a wrapper for the C++ std::chrono header.

Setters: None.

Getters: getStartingHour, getEndingHour, getWeekday

Constructor: TimeWindow(int starting_hour, int ending_hour, std::chrono::weekday weekday)

Methods added:

method getDuration(): returns a duration (essentially, end time - start time) for some time window.
The method returns a new TimeWindow. The TimeWindow object where the method is called is unchanged.

method toString(): Transforms a TimeWindow into human-readable datetime content.

Jun 10th 2022:
Adds a map to pair weekdays with their index. Changes types of weekday related functions to deal
with ints and strings.

Jul 1st 2022:
Adds an Id variable so we may uniquely identify and compare TimeWindows. Adds a comparator
struct TWComparator so that the std::set library may compare TimeWindows in it's internal
ordering and equality operations. Marks getters as const and adds an overload for equality.

Jul 14th and 15th 2022:
Implements Id generation on constructor using a static counter that counts instantiated members
and implements deletor that decrements counter. Implements constructor, getters, and toString() 
methods. Adds a new method, clashes(TimeWindow other) which determines if two windows overlap in
time. Makes constructor and destructor public for pass-by-value purposes. Adds copy constructor
to upkeep ID values correctly after pass-by-value in functions (the absence of this should 
not cause problems because objects are instantiated first and then used, and no objects are 
deleted until the program exits, but is still the correct practice).